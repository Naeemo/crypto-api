{"version":3,"sources":["webpack://CryptoApi/webpack/bootstrap","webpack://CryptoApi/./src/hasher/hasher8.mjs","webpack://CryptoApi/./src/hasher/md2.mjs","webpack://CryptoApi/./src/encoder/hex.mjs","webpack://CryptoApi/./src/hasher/hasher.mjs","webpack://CryptoApi/./example/hasher-basic.mjs"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","13","e","iterator","constructor","length","configurable","writable","u","setPrototypeOf","getPrototypeOf","__proto__","a","Hasher8","options","_this","TypeError","this","ReferenceError","_possibleConstructorReturn","_getPrototypeOf","unitSize","blockSizeInBytes","blockSize","blockUnits","Hasher","state","message","Array","charCodeAt","substr","processBlock","M","size","hash","String","fromCharCode","SBOX","Md2","md2_possibleConstructorReturn","md2_getPrototypeOf","rounds","_get","checksum","block","j","addPaddingPKCS7","process","getStateHash","toHex","raw","str","toString","__webpack_exports__","unitOrder","reset","JSON","parse","stringify","join","_src_hasher_md2__WEBPACK_IMPORTED_MODULE_0__","_src_encoder_hex__WEBPACK_IMPORTED_MODULE_1__","hasher","update","document","getElementById","innerHTML","finalize"],"mappings":"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","file":"example/hasher-basic.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n","'use strict';\n\nimport Hasher from \"./hasher\";\n\n/**\n * Hasher for 8 bit blocks\n * @interface\n */\nclass Hasher8 extends Hasher {\n  /**\n   * @param {Object} [options]\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * Size of unit = 1 byte\n     * @type {number} unitSize\n     */\n    this.unitSize = 1;\n\n    /**\n     * Size of block in bytes\n     * @type {number}\n     */\n    this.blockSizeInBytes = this.blockSize * this.unitSize;\n\n    /**\n     * Current block (only for speed optimization)\n     * @private\n     * @type {number[]}\n     */\n    this.blockUnits = [];\n  }\n\n  /**\n   * Process ready blocks\n   */\n  process() {\n    while (this.state.message.length >= this.blockSizeInBytes) {\n      this.blockUnits = new Array(this.blockSizeInBytes);\n      for (let i = 0; i < this.blockSizeInBytes; i++) {\n        this.blockUnits[i] = this.state.message.charCodeAt(i) | 0;\n      }\n      this.state.message = this.state.message.substr(this.blockSizeInBytes);\n      this.processBlock(this.blockUnits);\n    }\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   * @param {number[]} M\n   */\n  processBlock(M) {\n  }\n\n  /**\n   * Get hash from state\n   *\n   * @protected\n   * @param {number} [size=this.state.hash.length] - Limit hash size (in chunks)\n   * @returns {string}\n   */\n  getStateHash(size) {\n    size = size || this.state.hash.length;\n    let hash = '';\n    for (let i = 0; i < size; i++) {\n      hash += String.fromCharCode(this.state.hash[i] & 0xff);\n    }\n    return hash;\n  }\n}\n\nexport default Hasher8;","'use strict';\n\nimport Hasher8 from \"./hasher8\";\n\n/**\n * Constants from Pi\n * @link https://github.com/e-sushi/MD2-S-box-creator\n * @type {number[]}\n */\nconst SBOX = [\n  0x29, 0x2e, 0x43, 0xc9, 0xa2, 0xd8, 0x7c, 0x01, 0x3d, 0x36, 0x54, 0xa1,\n  0xec, 0xf0, 0x06, 0x13, 0x62, 0xa7, 0x05, 0xf3, 0xc0, 0xc7, 0x73, 0x8c,\n  0x98, 0x93, 0x2b, 0xd9, 0xbc, 0x4c, 0x82, 0xca, 0x1e, 0x9b, 0x57, 0x3c,\n  0xfd, 0xd4, 0xe0, 0x16, 0x67, 0x42, 0x6f, 0x18, 0x8a, 0x17, 0xe5, 0x12,\n  0xbe, 0x4e, 0xc4, 0xd6, 0xda, 0x9e, 0xde, 0x49, 0xa0, 0xfb, 0xf5, 0x8e,\n  0xbb, 0x2f, 0xee, 0x7a, 0xa9, 0x68, 0x79, 0x91, 0x15, 0xb2, 0x07, 0x3f,\n  0x94, 0xc2, 0x10, 0x89, 0x0b, 0x22, 0x5f, 0x21, 0x80, 0x7f, 0x5d, 0x9a,\n  0x5a, 0x90, 0x32, 0x27, 0x35, 0x3e, 0xcc, 0xe7, 0xbf, 0xf7, 0x97, 0x03,\n  0xff, 0x19, 0x30, 0xb3, 0x48, 0xa5, 0xb5, 0xd1, 0xd7, 0x5e, 0x92, 0x2a,\n  0xac, 0x56, 0xaa, 0xc6, 0x4f, 0xb8, 0x38, 0xd2, 0x96, 0xa4, 0x7d, 0xb6,\n  0x76, 0xfc, 0x6b, 0xe2, 0x9c, 0x74, 0x04, 0xf1, 0x45, 0x9d, 0x70, 0x59,\n  0x64, 0x71, 0x87, 0x20, 0x86, 0x5b, 0xcf, 0x65, 0xe6, 0x2d, 0xa8, 0x02,\n  0x1b, 0x60, 0x25, 0xad, 0xae, 0xb0, 0xb9, 0xf6, 0x1c, 0x46, 0x61, 0x69,\n  0x34, 0x40, 0x7e, 0x0f, 0x55, 0x47, 0xa3, 0x23, 0xdd, 0x51, 0xaf, 0x3a,\n  0xc3, 0x5c, 0xf9, 0xce, 0xba, 0xc5, 0xea, 0x26, 0x2c, 0x53, 0x0d, 0x6e,\n  0x85, 0x28, 0x84, 0x09, 0xd3, 0xdf, 0xcd, 0xf4, 0x41, 0x81, 0x4d, 0x52,\n  0x6a, 0xdc, 0x37, 0xc8, 0x6c, 0xc1, 0xab, 0xfa, 0x24, 0xe1, 0x7b, 0x08,\n  0x0c, 0xbd, 0xb1, 0x4a, 0x78, 0x88, 0x95, 0x8b, 0xe3, 0x63, 0xe8, 0x6d,\n  0xe9, 0xcb, 0xd5, 0xfe, 0x3b, 0x00, 0x1d, 0x39, 0xf2, 0xef, 0xb7, 0x0e,\n  0x66, 0x58, 0xd0, 0xe4, 0xa6, 0x77, 0x72, 0xf8, 0xeb, 0x75, 0x4b, 0x0a,\n  0x31, 0x44, 0x50, 0xb4, 0x8f, 0xed, 0x1f, 0x1a, 0xdb, 0x99, 0x8d, 0x33,\n  0x9f, 0x11, 0x83, 0x14\n];\n\n/**\n * Calculates [MD2](https://tools.ietf.org/html/rfc1319) hash\n *\n * @example <caption>Calculates MD2 hash from string \"message\" - ES6 style</caption>\n * import Md2 from \"crypto-api/src/hasher/md2\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n *\n * let hasher = new Md2();\n * hasher.update('message');\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates MD2 hash from UTF string \"message\" - ES6 style</caption>\n * import Md2 from \"crypto-api/src/hasher/md2\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n * import {fromUtf} from \"crypto-api/src/encoder/utf\";\n *\n * let hasher = new Md2();\n * hasher.update(fromUtf('message'));\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates MD2 hash from string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   var hasher = CryptoApi.getHasher('md2');\n *   hasher.update('message');\n *   console.log(CryptoApi.encoder.toHex(hasher.finalize()));\n * </script>\n *\n * @example <caption>Calculates MD2 hash from UTF string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   console.log(CryptoApi.hash('md2', 'message'));\n * </script>\n */\nclass Md2 extends Hasher8 {\n  /**\n   * @param {Object} [options]\n   * @param {number} [options.rounds=18] - Number of rounds (Must be greater than 0)\n   */\n  constructor(options) {\n    super(options);\n    this.options.rounds = this.options.rounds || 18;\n  }\n\n  /**\n   * Reset hasher to initial state\n   */\n  reset() {\n    super.reset();\n    this.state.hash = new Array(48);\n    this.state.checksum = new Array(16);\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   * @ignore\n   * @param {number[]} block - Block\n   */\n  processBlock(block) {\n    // Append hash\n    for (let i = 0; i < 16; i++) {\n      this.state.hash[16 + i] = block[i] | 0;\n      this.state.hash[32 + i] = block[i] ^ this.state.hash[i];\n    }\n\n    // Rounds\n    let t = 0;\n    for (let i = 0; i < this.options.rounds; i++) {\n      for (let j = 0; j < 48; j++) {\n        t = this.state.hash[j] ^= SBOX[t];\n      }\n      t = (t + i) & 0xff;\n    }\n\n    // Append checksum\n    t = this.state.checksum[15] & 0xff;\n    for (let i = 0; i < 16; i++) {\n      t = this.state.checksum[i] ^= SBOX[block[i] ^ t];\n    }\n  }\n\n  /**\n   * Finalize hash and return result\n   *\n   * @returns {string}\n   */\n  finalize() {\n    this.addPaddingPKCS7(16 - (this.state.message.length & 0xf) | 0);\n    this.process();\n\n    // Process checksum\n    for (let i = 0; i < 16; i++) {\n      this.state.message += String.fromCharCode(this.state.checksum[i]);\n    }\n    this.process();\n\n    // Return hash\n    return this.getStateHash(16);\n  }\n}\n\nexport default Md2;","'use strict';\n\n/**\n * Convert binary result of hash to hex\n *\n * @param {string} raw\n * @returns {string}\n */\nexport function toHex(raw) {\n  let str = '';\n  for (let i = 0, l = raw.length; i < l; i++) {\n    str += (raw.charCodeAt(i) < 16 ? '0' : '') + raw.charCodeAt(i).toString(16);\n  }\n  return str;\n}","'use strict';\n\n/**\n * Base hasher class\n * @interface\n */\nclass Hasher {\n  /**\n   * @param {Object} options\n   * @constructor\n   */\n  constructor(options) {\n    /**\n     * Size of unit in bytes (4 = 32 bits)\n     * @type {number}\n     */\n    this.unitSize = 4;\n    /**\n     * Bytes order in unit\n     *   0 - normal\n     *   1 - reverse\n     * @type {number}\n     */\n    this.unitOrder = 0;\n    /**\n     * Size of block in units\n     * @type {number}\n     */\n    this.blockSize = 16;\n    /**\n     * Size of block in bytes\n     * @type {number}\n     */\n    this.blockSizeInBytes = this.blockSize * this.unitSize;\n\n    this.options = options || {};\n\n    this.reset();\n  }\n\n  /**\n   * Reset hasher to initial state\n   */\n  reset() {\n    /**\n     * All algorithm variables that changed during process\n     * @protected\n     * @type {Object}\n     * @property {string} state.message - Unprocessed Message\n     * @property {number} state.length - Length of message\n     */\n    this.state = {};\n    this.state.message = '';\n    this.state.length = 0;\n    /**\n     * Options from initialization\n     * @protected\n     * @type {Object}\n     */\n  }\n\n  /**\n   * Return current state\n   *\n   * @returns {Object}\n   */\n  getState() {\n    return JSON.parse(JSON.stringify(this.state));\n  }\n\n  /**\n   * Set current state\n   *\n   * @param {Object} state\n   */\n  setState(state) {\n    this.state = state;\n  }\n\n  /**\n   * Update message from binary string\n   *\n   * @param {string} message\n   */\n  update(message) {\n    this.state.message += message;\n    this.state.length += message.length;\n    this.process();\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   */\n  process() {\n  }\n\n  /**\n   * Finalize hash and return result\n   *\n   * @returns {string}\n   */\n  finalize() {\n    return '';\n  }\n\n  /**\n   * Get hash from state\n   *\n   * @protected\n   * @param {number} [size=this.state.hash.length] - Limit hash size (in chunks)\n   * @returns {string}\n   */\n  getStateHash(size) {\n    return '';\n  }\n\n  /**\n   * Add PKCS7 padding to message\n   * Pad with bytes all of the same value as the number of padding bytes\n   *\n   * @protected\n   * @param {number} length\n   */\n  addPaddingPKCS7(length) {\n    this.state.message += new Array(length + 1).join(String.fromCharCode(length));\n  }\n\n  /**\n   * Add ISO7816-4 padding to message\n   * Pad with 0x80 followed by zero bytes\n   *\n   * @protected\n   * @param {number} length\n   */\n  addPaddingISO7816(length) {\n    this.state.message += \"\\x80\" + new Array(length).join(\"\\x00\");\n  }\n\n  /**\n   * Add zero padding to message\n   * Pad with 0x00 characters\n   *\n   * @protected\n   * @param {number} length\n   */\n  addPaddingZero(length) {\n    this.state.message += new Array(length + 1).join(\"\\x00\");\n  }\n}\n\nexport default Hasher;","'use strict';\n\nimport Md2 from \"../src/hasher/md2\";\nimport {toHex} from \"../src/encoder/hex\";\n\nlet hasher = new Md2();\nhasher.update('test message');\ndocument.getElementById('result').innerHTML = toHex(hasher.finalize());\n"],"sourceRoot":""}