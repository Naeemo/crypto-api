{"version":3,"sources":["webpack://CryptoApi/webpack/bootstrap","webpack://CryptoApi/./src/tools/tools.mjs","webpack://CryptoApi/./src/encoder/utf.mjs","webpack://CryptoApi/./src/hasher/md5.mjs","webpack://CryptoApi/./src/hasher/sha1.mjs","webpack://CryptoApi/./src/encoder/hex.mjs","webpack://CryptoApi/./src/hasher/hasher32be.mjs","webpack://CryptoApi/./src/hasher/hasher.mjs","webpack://CryptoApi/./example/benchmark-other.mjs","webpack://CryptoApi/./src/hasher/hasher32le.mjs","webpack://CryptoApi/./src/hasher/sha512.mjs","webpack://CryptoApi/./src/hasher/sha256.mjs"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","0","e","rotateLeft","x","rotateRight","rotateRight64hi","hi","lo","rotateRight64lo","__webpack_exports__","fromUtf","message","raw","msgLen","length","charCode","charCodeAt","String","fromCharCode","_hasher32le__WEBPACK_IMPORTED_MODULE_0__","_tools_tools__WEBPACK_IMPORTED_MODULE_1__","a","iterator","constructor","configurable","writable","Reflect","u","getOwnPropertyDescriptor","setPrototypeOf","getPrototypeOf","__proto__","f","S","T","Array","Math","abs","sin","Md5","ReferenceError","Hasher32le","_get","_getPrototypeOf","this","state","hash","block","b","CC","FF","GG","HH","II","addPaddingISO7816","addLengthBits","process","getStateHash","y","z","k","_hasher32be__WEBPACK_IMPORTED_MODULE_0__","K","Sha1","options","_this","TypeError","_possibleConstructorReturn","rounds","W","Hasher32be","toHex","str","toString","_hasher__WEBPACK_IMPORTED_MODULE_0__","h","unitOrder","blockUnits","Hasher","blockSizeInBytes","push","substr","processBlock","M","size","unitSize","blockSize","reset","JSON","parse","stringify","join","_src_hasher_md5__WEBPACK_IMPORTED_MODULE_0__","_src_hasher_sha1__WEBPACK_IMPORTED_MODULE_1__","_src_hasher_sha256__WEBPACK_IMPORTED_MODULE_2__","_src_hasher_sha512__WEBPACK_IMPORTED_MODULE_3__","_src_encoder_utf__WEBPACK_IMPORTED_MODULE_4__","_src_encoder_hex__WEBPACK_IMPORTED_MODULE_5__","suite","setup","md5","update","finalize","bench","tmp","result","CryptoJS","enc","Hex","MD5","Hashes","hex","cryptoApi","cryptoJS","algo","sha1","SHA1","jsSHA","getHash","asmCrypto","sha256","Sha256","SHA256","sha512","Sha512","SHA512","hasher","s0h","s0l","s1h","s1l","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","c1","c2","c3","c4","chl","majh","majl","t1l","t1h","t2l","g","t1","t2"],"mappings":"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","file":"example/benchmark-other.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 43);\n","'use strict';\n\n/**\n * Rotate x to n bits left\n *\n * @param {number} x\n * @param {number} n\n * @returns {number}\n */\nfunction rotateLeft(x, n) {\n  return ((x << n) | (x >>> (32 - n))) | 0;\n}\n\n/**\n * Rotate x to n bits right\n * @param {number} x\n * @param {number} n\n * @returns {number}\n */\nfunction rotateRight(x, n) {\n  return ((x >>> n) | (x << (32 - n))) | 0;\n}\n\n/**\n * Rotate 64bit to n bits right and return hi\n *\n * @param {number} hi\n * @param {number} lo\n * @param {number} n\n * @returns {number}\n */\nfunction rotateRight64hi(hi, lo, n) {\n  if (n === 32) {\n    return lo;\n  }\n  if (n > 32) {\n    return rotateRight64hi(lo, hi, n - 32);\n  }\n  return ((hi >>> n) | (lo << (32 - n))) & (0xFFFFFFFF);\n}\n\n/**\n * Rotate 64bit to n bits right and return lo\n *\n * @param {number} hi\n * @param {number} lo\n * @param {number} n\n * @returns {number}\n */\nfunction rotateRight64lo(hi, lo, n) {\n  if (n === 32) {\n    return hi;\n  }\n  if (n > 32) {\n    return rotateRight64lo(lo, hi, n - 32);\n  }\n  return ((lo >>> n) | (hi << (32 - n))) & (0xFFFFFFFF);\n}\n\nexport {rotateLeft, rotateRight, rotateRight64lo, rotateRight64hi};","'use strict';\n\n/**\n * Convert UTF8/UTF16 string to binary input for hasher\n *\n * @param {string} message\n * @returns {string}\n */\nexport function fromUtf(message) {\n  let raw = '';\n  for (let i = 0, msgLen = message.length; i < msgLen; i++) {\n    let charCode = message.charCodeAt(i);\n    if (charCode < 0x80) {\n      raw += String.fromCharCode(charCode);\n    }\n    else if (charCode < 0x800) {\n      raw += String.fromCharCode(0xc0 | (charCode >> 6));\n      raw += String.fromCharCode(0x80 | (charCode & 0x3f));\n    }\n    else if (charCode < 0xd800 || charCode >= 0xe000) {\n      raw += String.fromCharCode(0xe0 | (charCode >> 12));\n      raw += String.fromCharCode(0x80 | ((charCode >> 6) & 0x3f));\n      raw += String.fromCharCode(0x80 | (charCode & 0x3f));\n    }\n    // surrogate pair\n    else {\n      i++;\n      // UTF-16 encodes 0x10000-0x10FFFF by\n      // subtracting 0x10000 and splitting the\n      // 20 bits of 0x0-0xFFFFF into two halves\n      charCode = 0x10000 + (((charCode & 0x3ff) << 10)\n        | (message.charCodeAt(i) & 0x3ff));\n      raw += String.fromCharCode(0xf0 | (charCode >> 18));\n      raw += String.fromCharCode(0x80 | ((charCode >> 12) & 0x3f));\n      raw += String.fromCharCode(0x80 | ((charCode >> 6) & 0x3f));\n      raw += String.fromCharCode(0x80 | (charCode & 0x3f));\n    }\n  }\n  return raw;\n}","'use strict';\n\nimport Hasher32le from \"./hasher32le\";\nimport {rotateLeft} from \"../tools/tools\";\n\n// Transform constants\n/** @type {number[]} */\nconst S = [\n  [7, 12, 17, 22],\n  [5, 9, 14, 20],\n  [4, 11, 16, 23],\n  [6, 10, 15, 21]\n];\n/** @type {number[]} */\nconst T = new Array(64);\nfor (let i = 0; i < 64; i++) {\n  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n}\n\n/**\n * Calculates [MD5](https://tools.ietf.org/html/rfc1321) hash\n *\n * @example <caption>Calculates MD5 hash from string \"message\" - ES6 style</caption>\n * import Md5 from \"crypto-api/src/hasher/md5\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n *\n * let hasher = new Md5();\n * hasher.update('message');\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates MD5 hash from UTF string \"message\" - ES6 style</caption>\n * import Md5 from \"crypto-api/src/hasher/md5\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n * import {fromUtf} from \"crypto-api/src/encoder/utf\";\n *\n * let hasher = new Md5();\n * hasher.update(fromUtf('message'));\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates MD5 hash from string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   var hasher = CryptoApi.getHasher('md5');\n *   hasher.update('message');\n *   console.log(CryptoApi.encoder.toHex(hasher.finalize()));\n * </script>\n *\n * @example <caption>Calculates MD5 hash from UTF string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   console.log(CryptoApi.hash('md5', 'message'));\n * </script>\n */\nclass Md5 extends Hasher32le {\n  /**\n   * Reset hasher to initial state\n   */\n  reset() {\n    super.reset();\n    this.state.hash = [\n      0x67452301 | 0,\n      0xefcdab89 | 0,\n      0x98badcfe | 0,\n      0x10325476 | 0\n    ];\n  }\n\n  /**\n   * @protected\n   * @ignore\n   * @param {number} x\n   * @param {number} y\n   * @param {number} z\n   * @returns {number}\n   */\n  static FF(x, y, z) {\n    return (x & y) | (~x & z);\n  }\n\n  /**\n   * @protected\n   * @ignore\n   * @param {number} x\n   * @param {number} y\n   * @param {number} z\n   * @returns {number}\n   */\n  static GG(x, y, z) {\n    return (x & z) | (y & ~z);\n  }\n\n  /**\n   * @protected\n   * @ignore\n   * @param {number} x\n   * @param {number} y\n   * @param {number} z\n   * @returns {number}\n   */\n  static HH(x, y, z) {\n    return x ^ y ^ z;\n  }\n\n  /**\n   * @protected\n   * @ignore\n   * @param {number} x\n   * @param {number} y\n   * @param {number} z\n   * @returns {number}\n   */\n  static II(x, y, z) {\n    return y ^ (x | ~z);\n  }\n\n  /**\n   * @protected\n   * @ignore\n   * @param {function} f\n   * @param {number} k\n   * @param {number} a\n   * @param {number} x\n   * @param {number} y\n   * @param {number} z\n   * @param {number} m\n   * @param {number} s\n   * @returns {number}\n   */\n  static CC(f, k, a, x, y, z, m, s) {\n    return (rotateLeft((a + f(x, y, z) + m + k), s) + x) | 0;\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   * @ignore\n   * @param {number[]} block - Block\n   */\n  processBlock(block) {\n    // Working variables\n    let a = this.state.hash[0] | 0;\n    let b = this.state.hash[1] | 0;\n    let c = this.state.hash[2] | 0;\n    let d = this.state.hash[3] | 0;\n\n    // Round 1\n    a = Md5.CC(Md5.FF, T[0], a, b, c, d, block[0], S[0][0]);\n    d = Md5.CC(Md5.FF, T[1], d, a, b, c, block[1], S[0][1]);\n    c = Md5.CC(Md5.FF, T[2], c, d, a, b, block[2], S[0][2]);\n    b = Md5.CC(Md5.FF, T[3], b, c, d, a, block[3], S[0][3]);\n    a = Md5.CC(Md5.FF, T[4], a, b, c, d, block[4], S[0][0]);\n    d = Md5.CC(Md5.FF, T[5], d, a, b, c, block[5], S[0][1]);\n    c = Md5.CC(Md5.FF, T[6], c, d, a, b, block[6], S[0][2]);\n    b = Md5.CC(Md5.FF, T[7], b, c, d, a, block[7], S[0][3]);\n    a = Md5.CC(Md5.FF, T[8], a, b, c, d, block[8], S[0][0]);\n    d = Md5.CC(Md5.FF, T[9], d, a, b, c, block[9], S[0][1]);\n    c = Md5.CC(Md5.FF, T[10], c, d, a, b, block[10], S[0][2]);\n    b = Md5.CC(Md5.FF, T[11], b, c, d, a, block[11], S[0][3]);\n    a = Md5.CC(Md5.FF, T[12], a, b, c, d, block[12], S[0][0]);\n    d = Md5.CC(Md5.FF, T[13], d, a, b, c, block[13], S[0][1]);\n    c = Md5.CC(Md5.FF, T[14], c, d, a, b, block[14], S[0][2]);\n    b = Md5.CC(Md5.FF, T[15], b, c, d, a, block[15], S[0][3]);\n\n    // Round 2\n    a = Md5.CC(Md5.GG, T[16], a, b, c, d, block[1], S[1][0]);\n    d = Md5.CC(Md5.GG, T[17], d, a, b, c, block[6], S[1][1]);\n    c = Md5.CC(Md5.GG, T[18], c, d, a, b, block[11], S[1][2]);\n    b = Md5.CC(Md5.GG, T[19], b, c, d, a, block[0], S[1][3]);\n    a = Md5.CC(Md5.GG, T[20], a, b, c, d, block[5], S[1][0]);\n    d = Md5.CC(Md5.GG, T[21], d, a, b, c, block[10], S[1][1]);\n    c = Md5.CC(Md5.GG, T[22], c, d, a, b, block[15], S[1][2]);\n    b = Md5.CC(Md5.GG, T[23], b, c, d, a, block[4], S[1][3]);\n    a = Md5.CC(Md5.GG, T[24], a, b, c, d, block[9], S[1][0]);\n    d = Md5.CC(Md5.GG, T[25], d, a, b, c, block[14], S[1][1]);\n    c = Md5.CC(Md5.GG, T[26], c, d, a, b, block[3], S[1][2]);\n    b = Md5.CC(Md5.GG, T[27], b, c, d, a, block[8], S[1][3]);\n    a = Md5.CC(Md5.GG, T[28], a, b, c, d, block[13], S[1][0]);\n    d = Md5.CC(Md5.GG, T[29], d, a, b, c, block[2], S[1][1]);\n    c = Md5.CC(Md5.GG, T[30], c, d, a, b, block[7], S[1][2]);\n    b = Md5.CC(Md5.GG, T[31], b, c, d, a, block[12], S[1][3]);\n\n    // Round 3\n    a = Md5.CC(Md5.HH, T[32], a, b, c, d, block[5], S[2][0]);\n    d = Md5.CC(Md5.HH, T[33], d, a, b, c, block[8], S[2][1]);\n    c = Md5.CC(Md5.HH, T[34], c, d, a, b, block[11], S[2][2]);\n    b = Md5.CC(Md5.HH, T[35], b, c, d, a, block[14], S[2][3]);\n    a = Md5.CC(Md5.HH, T[36], a, b, c, d, block[1], S[2][0]);\n    d = Md5.CC(Md5.HH, T[37], d, a, b, c, block[4], S[2][1]);\n    c = Md5.CC(Md5.HH, T[38], c, d, a, b, block[7], S[2][2]);\n    b = Md5.CC(Md5.HH, T[39], b, c, d, a, block[10], S[2][3]);\n    a = Md5.CC(Md5.HH, T[40], a, b, c, d, block[13], S[2][0]);\n    d = Md5.CC(Md5.HH, T[41], d, a, b, c, block[0], S[2][1]);\n    c = Md5.CC(Md5.HH, T[42], c, d, a, b, block[3], S[2][2]);\n    b = Md5.CC(Md5.HH, T[43], b, c, d, a, block[6], S[2][3]);\n    a = Md5.CC(Md5.HH, T[44], a, b, c, d, block[9], S[2][0]);\n    d = Md5.CC(Md5.HH, T[45], d, a, b, c, block[12], S[2][1]);\n    c = Md5.CC(Md5.HH, T[46], c, d, a, b, block[15], S[2][2]);\n    b = Md5.CC(Md5.HH, T[47], b, c, d, a, block[2], S[2][3]);\n\n    // Round 4\n    a = Md5.CC(Md5.II, T[48], a, b, c, d, block[0], S[3][0]);\n    d = Md5.CC(Md5.II, T[49], d, a, b, c, block[7], S[3][1]);\n    c = Md5.CC(Md5.II, T[50], c, d, a, b, block[14], S[3][2]);\n    b = Md5.CC(Md5.II, T[51], b, c, d, a, block[5], S[3][3]);\n    a = Md5.CC(Md5.II, T[52], a, b, c, d, block[12], S[3][0]);\n    d = Md5.CC(Md5.II, T[53], d, a, b, c, block[3], S[3][1]);\n    c = Md5.CC(Md5.II, T[54], c, d, a, b, block[10], S[3][2]);\n    b = Md5.CC(Md5.II, T[55], b, c, d, a, block[1], S[3][3]);\n    a = Md5.CC(Md5.II, T[56], a, b, c, d, block[8], S[3][0]);\n    d = Md5.CC(Md5.II, T[57], d, a, b, c, block[15], S[3][1]);\n    c = Md5.CC(Md5.II, T[58], c, d, a, b, block[6], S[3][2]);\n    b = Md5.CC(Md5.II, T[59], b, c, d, a, block[13], S[3][3]);\n    a = Md5.CC(Md5.II, T[60], a, b, c, d, block[4], S[3][0]);\n    d = Md5.CC(Md5.II, T[61], d, a, b, c, block[11], S[3][1]);\n    c = Md5.CC(Md5.II, T[62], c, d, a, b, block[2], S[3][2]);\n    b = Md5.CC(Md5.II, T[63], b, c, d, a, block[9], S[3][3]);\n\n    this.state.hash[0] = (this.state.hash[0] + a) | 0;\n    this.state.hash[1] = (this.state.hash[1] + b) | 0;\n    this.state.hash[2] = (this.state.hash[2] + c) | 0;\n    this.state.hash[3] = (this.state.hash[3] + d) | 0;\n  }\n\n  /**\n   * Finalize hash and return result\n   *\n   * @returns {string}\n   */\n  finalize() {\n    this.addPaddingISO7816(\n      this.state.message.length < 56 ?\n        56 - this.state.message.length | 0 :\n        120 - this.state.message.length | 0);\n    this.addLengthBits();\n    this.process();\n    return this.getStateHash();\n  }\n}\n\nexport default Md5;","'use strict';\n\nimport Hasher32be from \"./hasher32be\";\nimport {rotateLeft} from \"../tools/tools\";\n\n// Transform constants\n/** @type {number[]} */\nconst K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n\n/**\n * Calculates [SHA1](https://tools.ietf.org/html/rfc3174) hash\n *\n * @example <caption>Calculates SHA1 hash from string \"message\" - ES6 style</caption>\n * import Sha1 from \"crypto-api/src/hasher/sha1\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n *\n * let hasher = new Sha1();\n * hasher.update('message');\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates SHA1 hash from UTF string \"message\" - ES6 style</caption>\n * import Sha1 from \"crypto-api/src/hasher/sha1\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n * import {fromUtf} from \"crypto-api/src/encoder/utf\";\n *\n * let hasher = new Sha1();\n * hasher.update(fromUtf('message'));\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates SHA1 hash from string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   var hasher = CryptoApi.getHasher('sha1');\n *   hasher.update('message');\n *   console.log(CryptoApi.encoder.toHex(hasher.finalize()));\n * </script>\n *\n * @example <caption>Calculates SHA1 hash from UTF string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   console.log(CryptoApi.hash('sha1', 'message'));\n * </script>\n */\nclass Sha1 extends Hasher32be {\n  /**\n   * @param {Object} [options]\n   * @param {number} [options.rounds=80] - Number of rounds (Must be greater than 16)\n   */\n  constructor(options) {\n    super(options);\n    this.options.rounds = this.options.rounds || 80;\n\n    /**\n     * Working variable (only for speed optimization)\n     * @private\n     * @ignore\n     * @type {number[]}\n     */\n    this.W = new Array(80);\n  }\n\n  /**\n   * Reset hasher to initial state\n   */\n  reset() {\n    super.reset();\n    this.state.hash = [\n      0x67452301 | 0,\n      0xefcdab89 | 0,\n      0x98badcfe | 0,\n      0x10325476 | 0,\n      0xc3d2e1f0 | 0\n    ];\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   * @ignore\n   * @param {number[]} block - Block\n   */\n  processBlock(block) {\n    // Working variables\n    let a = this.state.hash[0] | 0;\n    let b = this.state.hash[1] | 0;\n    let c = this.state.hash[2] | 0;\n    let d = this.state.hash[3] | 0;\n    let e = this.state.hash[4] | 0;\n\n    // Calculate hash\n    for (let i = 0; i < this.options.rounds; i++) {\n      if (i < 16) {\n        this.W[i] = block[i] | 0;\n      } else {\n        this.W[i] = rotateLeft(this.W[i - 3] ^ this.W[i - 8] ^ this.W[i - 14] ^ this.W[i - 16], 1) | 0;\n      }\n\n      let t = (rotateLeft(a, 5) + e + this.W[i] + K[(i / 20) >> 0]) | 0;\n      if (i < 20) {\n        t = (t + ((b & c) | (~b & d))) | 0;\n      } else if (i < 40) {\n        t = (t + (b ^ c ^ d)) | 0;\n      } else if (i < 60) {\n        t = (t + ((b & c) | (b & d) | (c & d))) | 0;\n      } else {\n        t = (t + (b ^ c ^ d)) | 0;\n      }\n      e = d;\n      d = c;\n      c = rotateLeft(b, 30) | 0;\n      b = a;\n      a = t;\n    }\n\n    this.state.hash[0] = (this.state.hash[0] + a) | 0;\n    this.state.hash[1] = (this.state.hash[1] + b) | 0;\n    this.state.hash[2] = (this.state.hash[2] + c) | 0;\n    this.state.hash[3] = (this.state.hash[3] + d) | 0;\n    this.state.hash[4] = (this.state.hash[4] + e) | 0;\n  }\n\n  /**\n   * Finalize hash and return result\n   *\n   * @returns {string}\n   */\n  finalize() {\n    this.addPaddingISO7816(\n      this.state.message.length < 56 ?\n        56 - this.state.message.length | 0 :\n        120 - this.state.message.length | 0);\n    this.addLengthBits();\n    this.process();\n    return this.getStateHash();\n  }\n}\n\nexport default Sha1;","'use strict';\n\n/**\n * Convert binary result of hash to hex\n *\n * @param {string} raw\n * @returns {string}\n */\nexport function toHex(raw) {\n  let str = '';\n  for (let i = 0, l = raw.length; i < l; i++) {\n    str += (raw.charCodeAt(i) < 16 ? '0' : '') + raw.charCodeAt(i).toString(16);\n  }\n  return str;\n}","'use strict';\n\nimport Hasher from \"./hasher\";\n\n/**\n * Hasher for 32 bit big endian blocks\n * @interface\n */\nclass Hasher32be extends Hasher {\n  /**\n   * @param {Object} [options]\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * Reverse order of bytes\n     * @type {number}\n     */\n    this.unitOrder = 1;\n    /**\n     * Current block (only for speed optimization)\n     * @private\n     * @type {number[]}\n     */\n    this.blockUnits = [];\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   */\n  process() {\n    while (this.state.message.length >= this.blockSizeInBytes) {\n      this.blockUnits = [];\n      for (let b = 0; b < this.blockSizeInBytes; b += 4) {\n        this.blockUnits.push(\n          this.state.message.charCodeAt(b) << 24 |\n          this.state.message.charCodeAt(b + 1) << 16 |\n          this.state.message.charCodeAt(b + 2) << 8 |\n          this.state.message.charCodeAt(b + 3));\n      }\n      this.state.message = this.state.message.substr(this.blockSizeInBytes);\n      this.processBlock(this.blockUnits);\n    }\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   * @param {number[]} M\n   */\n  processBlock(M) {\n  }\n\n  /**\n   * Get hash from state\n   *\n   * @protected\n   * @param {number} [size=this.state.hash.length] - Limit hash size (in chunks)\n   * @returns {string}\n   */\n  getStateHash(size) {\n    size = size || this.state.hash.length;\n    let hash = '';\n    for (let i = 0; i < size; i++) {\n      hash += String.fromCharCode(this.state.hash[i] >> 24 & 0xff) +\n        String.fromCharCode(this.state.hash[i] >> 16 & 0xff) +\n        String.fromCharCode(this.state.hash[i] >> 8 & 0xff) +\n        String.fromCharCode(this.state.hash[i] & 0xff);\n    }\n    return hash;\n  }\n\n  /**\n   * Add to message cumulative size of message in bits\n   *\n   * @protected\n   */\n  addLengthBits() {\n    // @todo fix length to 64 bit\n    this.state.message += \"\\x00\\x00\\x00\" +\n      String.fromCharCode(this.state.length >> 29 & 0xff) +\n      String.fromCharCode(this.state.length >> 21 & 0xff) +\n      String.fromCharCode(this.state.length >> 13 & 0xff) +\n      String.fromCharCode(this.state.length >> 5 & 0xff) +\n      String.fromCharCode(this.state.length << 3 & 0xff);\n  }\n}\n\nexport default Hasher32be;","'use strict';\n\n/**\n * Base hasher class\n * @interface\n */\nclass Hasher {\n  /**\n   * @param {Object} options\n   * @constructor\n   */\n  constructor(options) {\n    /**\n     * Size of unit in bytes (4 = 32 bits)\n     * @type {number}\n     */\n    this.unitSize = 4;\n    /**\n     * Bytes order in unit\n     *   0 - normal\n     *   1 - reverse\n     * @type {number}\n     */\n    this.unitOrder = 0;\n    /**\n     * Size of block in units\n     * @type {number}\n     */\n    this.blockSize = 16;\n    /**\n     * Size of block in bytes\n     * @type {number}\n     */\n    this.blockSizeInBytes = this.blockSize * this.unitSize;\n\n    this.options = options || {};\n\n    this.reset();\n  }\n\n  /**\n   * Reset hasher to initial state\n   */\n  reset() {\n    /**\n     * All algorithm variables that changed during process\n     * @protected\n     * @type {Object}\n     * @property {string} state.message - Unprocessed Message\n     * @property {number} state.length - Length of message\n     */\n    this.state = {};\n    this.state.message = '';\n    this.state.length = 0;\n    /**\n     * Options from initialization\n     * @protected\n     * @type {Object}\n     */\n  }\n\n  /**\n   * Return current state\n   *\n   * @returns {Object}\n   */\n  getState() {\n    return JSON.parse(JSON.stringify(this.state));\n  }\n\n  /**\n   * Set current state\n   *\n   * @param {Object} state\n   */\n  setState(state) {\n    this.state = state;\n  }\n\n  /**\n   * Update message from binary string\n   *\n   * @param {string} message\n   */\n  update(message) {\n    this.state.message += message;\n    this.state.length += message.length;\n    this.process();\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   */\n  process() {\n  }\n\n  /**\n   * Finalize hash and return result\n   *\n   * @returns {string}\n   */\n  finalize() {\n    return '';\n  }\n\n  /**\n   * Get hash from state\n   *\n   * @protected\n   * @param {number} [size=this.state.hash.length] - Limit hash size (in chunks)\n   * @returns {string}\n   */\n  getStateHash(size) {\n    return '';\n  }\n\n  /**\n   * Add PKCS7 padding to message\n   * Pad with bytes all of the same value as the number of padding bytes\n   *\n   * @protected\n   * @param {number} length\n   */\n  addPaddingPKCS7(length) {\n    this.state.message += new Array(length + 1).join(String.fromCharCode(length));\n  }\n\n  /**\n   * Add ISO7816-4 padding to message\n   * Pad with 0x80 followed by zero bytes\n   *\n   * @protected\n   * @param {number} length\n   */\n  addPaddingISO7816(length) {\n    this.state.message += \"\\x80\" + new Array(length).join(\"\\x00\");\n  }\n\n  /**\n   * Add zero padding to message\n   * Pad with 0x00 characters\n   *\n   * @protected\n   * @param {number} length\n   */\n  addPaddingZero(length) {\n    this.state.message += new Array(length + 1).join(\"\\x00\");\n  }\n}\n\nexport default Hasher;","/* global asmCrypto */\n'use strict';\n\nimport Md5 from \"../src/hasher/md5\";\nimport Sha1 from \"../src/hasher/sha1\";\nimport Sha256 from \"../src/hasher/sha256\";\nimport Sha512 from \"../src/hasher/sha512\";\nimport {fromUtf} from \"../src/encoder/utf\";\nimport {toHex} from \"../src/encoder/hex\";\n\nsuite('MD5 with HEX result', function (suite) {\n  setup(function () {\n    const md5 = new Md5();\n    md5.update(fromUtf(''));\n    suite.hash = toHex(md5.finalize());\n  });\n  bench('CryptoApi', function () {\n    suite.tmp = new Md5();\n    suite.tmp.update(fromUtf(suite.hash));\n    suite.result = toHex(suite.tmp.finalize());\n  });\n  bench('CryptoJS', function () {\n    suite.result = CryptoJS.enc.Hex.stringify(CryptoJS.MD5(suite.hash));\n  });\n  bench('jsHashes', function () {\n    suite.result = (new Hashes.MD5).hex(suite.hash);\n  });\n});\nsuite('MD5 update', function (suite) {\n  setup(function () {\n    suite.cryptoApi = new Md5();\n    suite.cryptoApi.update(fromUtf(''));\n    suite.hash = toHex(suite.cryptoApi.finalize());\n    suite.cryptoApi = new Md5();\n    suite.cryptoJS = CryptoJS.algo.MD5.create();\n  });\n  bench('CryptoApi', function () {\n    suite.cryptoApi.update(fromUtf(suite.hash));\n  });\n  bench('CryptoJS', function () {\n    suite.cryptoJS.update(suite.hash);\n  });\n});\nsuite('SHA1 with HEX result', function (suite) {\n  setup(function () {\n    const sha1 = new Sha1();\n    sha1.update(fromUtf(''));\n    suite.hash = toHex(sha1.finalize());\n  });\n  bench('CryptoApi', function () {\n    suite.tmp = new Sha1();\n    suite.tmp.update(fromUtf(suite.hash));\n    toHex(suite.tmp.finalize());\n  });\n  bench('CryptoJS', function () {\n    CryptoJS.enc.Hex.stringify(CryptoJS.SHA1(suite.hash));\n  });\n  bench('jsHashes', function () {\n    (new Hashes.SHA1).hex(suite.hash);\n  });\n  bench('jsSHA', function () {\n    suite.tmp = new jsSHA('SHA-1', 'TEXT');\n    suite.tmp.update(suite.hash);\n    suite.tmp.getHash('HEX');\n  });\n  bench('asmCrypto', function () {\n    asmCrypto.SHA1.hex(suite.hash);\n  });\n});\nsuite('SHA1 update', function (suite) {\n  setup(function () {\n    suite.cryptoApi = new Sha1();\n    suite.cryptoApi.update(fromUtf(''));\n    suite.hash = toHex(suite.cryptoApi.finalize());\n    suite.cryptoApi = new Sha1();\n    suite.cryptoJS = CryptoJS.algo.SHA1.create();\n    suite.jsSHA = new jsSHA('SHA-1', 'TEXT');\n  });\n  bench('CryptoApi', function () {\n    suite.cryptoApi.update(fromUtf(suite.hash));\n  });\n  bench('CryptoJS', function () {\n    suite.cryptoJS.update(suite.hash);\n  });\n  bench('jsSHA', function () {\n    suite.jsSHA.update(suite.hash);\n  });\n});\nsuite('SHA256 with HEX result', function (suite) {\n  setup(function () {\n    const sha256 = new Sha256();\n    sha256.update(fromUtf(''));\n    suite.hash = toHex(sha256.finalize());\n  });\n  bench('CryptoApi', function () {\n    suite.tmp = new Sha256();\n    suite.tmp.update(fromUtf(suite.hash));\n    toHex(suite.tmp.finalize());\n  });\n  bench('CryptoJS', function () {\n    CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(suite.hash));\n  });\n  bench('jsHashes', function () {\n    (new Hashes.SHA256).hex(suite.hash);\n  });\n  bench('jsSHA', function () {\n    suite.tmp = new jsSHA('SHA-256', 'TEXT');\n    suite.tmp.update(suite.hash);\n    suite.tmp.getHash('HEX');\n  });\n  bench('asmCrypto', function () {\n    asmCrypto.SHA256.hex(suite.hash);\n  });\n});\nsuite('SHA256 update', function (suite) {\n  setup(function () {\n    suite.cryptoApi = new Sha256();\n    suite.cryptoApi.update(fromUtf(''));\n    suite.hash = toHex(suite.cryptoApi.finalize());\n    suite.cryptoApi = new Sha256();\n    suite.cryptoJS = CryptoJS.algo.SHA256.create();\n    suite.jsSHA = new jsSHA('SHA-256', 'TEXT');\n  });\n  bench('CryptoApi', function () {\n    suite.cryptoApi.update(fromUtf(suite.hash));\n  });\n  bench('CryptoJS', function () {\n    suite.cryptoJS.update(suite.hash);\n  });\n  bench('jsSHA', function () {\n    suite.jsSHA.update(suite.hash);\n  });\n});\nsuite('SHA512 with HEX result', function (suite) {\n  setup(function () {\n    const sha512 = new Sha512();\n    sha512.update(fromUtf(''));\n    suite.hash = toHex(sha512.finalize());\n  });\n  bench('CryptoApi', function () {\n    suite.tmp = new Sha512();\n    suite.tmp.update(fromUtf(suite.hash));\n    toHex(suite.tmp.finalize());\n  });\n  bench('CryptoJS', function () {\n    CryptoJS.enc.Hex.stringify(CryptoJS.SHA512(suite.hash));\n  });\n  bench('jsHashes', function () {\n    (new Hashes.SHA512).hex(suite.hash);\n  });\n  bench('jsSHA', function () {\n    suite.tmp = new jsSHA('SHA-512', 'TEXT');\n    suite.tmp.update(suite.hash);\n    suite.tmp.getHash('HEX');\n  });\n});\n\nsuite('SHA512 update', function (suite) {\n  setup(function () {\n    suite.cryptoApi = new Sha512();\n    suite.cryptoApi.update(fromUtf(''));\n    suite.hash = toHex(suite.cryptoApi.finalize());\n    suite.cryptoApi = new Sha512();\n    suite.cryptoJS = CryptoJS.algo.SHA512.create();\n    suite.jsSHA = new jsSHA('SHA-512', 'TEXT');\n  });\n  bench('CryptoApi', function () {\n    suite.cryptoApi.update(fromUtf(suite.hash));\n  });\n  bench('CryptoJS', function () {\n    suite.cryptoJS.update(suite.hash);\n  });\n  bench('jsSHA', function () {\n    suite.jsSHA.update(suite.hash);\n  });\n});","'use strict';\n\nimport Hasher from \"./hasher\";\n\n/**\n * Hasher for 32 bit little endian blocks\n * @interface\n */\nclass Hasher32le extends Hasher {\n  /**\n   * @param {Object} [options]\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * Current block (only for speed optimization)\n     * @private\n     * @type {number[]}\n     */\n    this.blockUnits = [];\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   */\n  process() {\n    while (this.state.message.length >= this.blockSizeInBytes) {\n      this.blockUnits = [];\n      for (let b = 0; b < this.blockSizeInBytes; b += 4) {\n        this.blockUnits.push(\n          this.state.message.charCodeAt(b) |\n          this.state.message.charCodeAt(b + 1) << 8 |\n          this.state.message.charCodeAt(b + 2) << 16 |\n          this.state.message.charCodeAt(b + 3) << 24);\n      }\n      this.state.message = this.state.message.substr(this.blockSizeInBytes);\n      this.processBlock(this.blockUnits);\n    }\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   * @param {number[]} M\n   */\n  processBlock(M) {\n  }\n\n  /**\n   * Get hash from state\n   *\n   * @protected\n   * @param {number} [size=this.state.hash.length] - Limit hash size (in chunks)\n   * @returns {string}\n   */\n  getStateHash(size) {\n    size = size || this.state.hash.length;\n    let hash = '';\n    for (let i = 0; i < size; i++) {\n      hash += String.fromCharCode(this.state.hash[i] & 0xff) +\n        String.fromCharCode(this.state.hash[i] >> 8 & 0xff) +\n        String.fromCharCode(this.state.hash[i] >> 16 & 0xff) +\n        String.fromCharCode(this.state.hash[i] >> 24 & 0xff);\n    }\n    return hash;\n  }\n\n  /**\n   * Add to message cumulative size of message in bits\n   *\n   * @protected\n   */\n  addLengthBits() {\n    // @todo fix length to 64 bit\n    this.state.message +=\n      String.fromCharCode(this.state.length << 3 & 0xff) +\n      String.fromCharCode(this.state.length >> 5 & 0xff) +\n      String.fromCharCode(this.state.length >> 13 & 0xff) +\n      String.fromCharCode(this.state.length >> 21 & 0xff) +\n      String.fromCharCode(this.state.length >> 29 & 0xff) +\n      \"\\x00\\x00\\x00\";\n  }\n}\n\nexport default Hasher32le;","'use strict';\n\nimport Hasher32be from \"./hasher32be\";\nimport {rotateRight64hi, rotateRight64lo} from \"../tools/tools\";\n\n// Transform constants\n/** @type {number[]} */\nconst K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f,\n  0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242,\n  0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235,\n  0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275,\n  0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f,\n  0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc,\n  0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6,\n  0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218,\n  0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99,\n  0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc,\n  0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915,\n  0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba,\n  0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc,\n  0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\n/**\n * Calculates [SHA512 (SHA384)](https://tools.ietf.org/html/rfc4634) hash\n * [SHA512/t (SHA512/256 SHA512/224)](http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf)\n *\n * @example <caption>Calculates SHA512 hash from string \"message\" - ES6 style</caption>\n * import Sha512 from \"crypto-api/src/hasher/sha512\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n *\n * let hasher = new Sha512();\n * hasher.update('message');\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates SHA512 hash from UTF string \"message\" - ES6 style</caption>\n * import Sha512 from \"crypto-api/src/hasher/sha512\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n * import {fromUtf} from \"crypto-api/src/encoder/utf\";\n *\n * let hasher = new Sha512();\n * hasher.update(fromUtf('message'));\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates SHA512 hash from string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   var hasher = CryptoApi.getHasher('sha512');\n *   hasher.update('message');\n *   console.log(CryptoApi.encoder.toHex(hasher.finalize()));\n * </script>\n *\n * @example <caption>Calculates SHA512 hash from UTF string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   console.log(CryptoApi.hash('sha512', 'message'));\n * </script>\n */\nclass Sha512 extends Hasher32be {\n  /**\n   * @param {Object} [options]\n   * @param {number} [options.rounds=160] - Number of rounds (Must be greater than 32)\n   * @param {number} [options.length=512] - Length of hash result (Can be from 32 to 480 with step 32)\n   *\n   * | Hash type  | Length |\n   * |------------|--------|\n   * | sha384     | 384    |\n   * | sha512     | 512    |\n   * | sha512/224 | 224    |\n   * | sha512/256 | 256    |\n   */\n  constructor(options) {\n    options = options || {};\n    options.length = options.length || 512;\n    options.rounds = options.rounds || 160;\n    super(options);\n\n    /**\n     * Size of block in units\n     * @ignore\n     * @type {number}\n     */\n    this.blockSize = 32;\n    /**\n     * Size of block in bytes\n     * @ignore\n     * @type {number}\n     */\n    this.blockSizeInBytes = this.blockSize * this.unitSize;\n\n    /**\n     * Working variable (only for speed optimization)\n     * @private\n     * @ignore\n     * @type {number[]}\n     */\n    this.W = new Array(160);\n  }\n\n  /**\n   * Reset hasher to initial state\n   */\n  reset () {\n    super.reset()\n    switch (this.options.length) {\n      case 384:\n        this.state.hash = [\n          0xcbbb9d5d | 0, 0xc1059ed8 | 0, 0x629a292a | 0, 0x367cd507 | 0,\n          0x9159015a | 0, 0x3070dd17 | 0, 0x152fecd8 | 0, 0xf70e5939 | 0,\n          0x67332667 | 0, 0xffc00b31 | 0, 0x8eb44a87 | 0, 0x68581511 | 0,\n          0xdb0c2e0d | 0, 0x64f98fa7 | 0, 0x47b5481d | 0, 0xbefa4fa4 | 0\n        ]\n        break\n      case 512:\n        this.state.hash = [\n          0x6a09e667 | 0, 0xf3bcc908 | 0, 0xbb67ae85 | 0, 0x84caa73b | 0,\n          0x3c6ef372 | 0, 0xfe94f82b | 0, 0xa54ff53a | 0, 0x5f1d36f1 | 0,\n          0x510e527f | 0, 0xade682d1 | 0, 0x9b05688c | 0, 0x2b3e6c1f | 0,\n          0x1f83d9ab | 0, 0xfb41bd6b | 0, 0x5be0cd19 | 0, 0x137e2179 | 0\n        ]\n        break\n      default:\n        const hasher = new Sha512()\n        for (let i = 0; i < 16; i++) {\n          hasher.state.hash[i] = hasher.state.hash[i] ^ 0xa5a5a5a5\n        }\n        hasher.update('SHA-512/' + this.options.length)\n        const hash = hasher.finalize()\n        this.state.hash = []\n        for (let b = 0; b < 64; b += 4) {\n          this.state.hash.push(\n            hash.charCodeAt(b) << 24 |\n            hash.charCodeAt(b + 1) << 16 |\n            hash.charCodeAt(b + 2) << 8 |\n            hash.charCodeAt(b + 3))\n        }\n    }\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   * @ignore\n   * @param {number[]} block - Block\n   */\n  processBlock(block) {\n    // Working variables\n    let ah = this.state.hash[0];\n    let al = this.state.hash[1];\n    let bh = this.state.hash[2];\n    let bl = this.state.hash[3];\n    let ch = this.state.hash[4];\n    let cl = this.state.hash[5];\n    let dh = this.state.hash[6];\n    let dl = this.state.hash[7];\n    let eh = this.state.hash[8];\n    let el = this.state.hash[9];\n    let fh = this.state.hash[10];\n    let fl = this.state.hash[11];\n    let gh = this.state.hash[12];\n    let gl = this.state.hash[13];\n    let hh = this.state.hash[14];\n    let hl = this.state.hash[15];\n    let s0h, s0l, s1h, s1l;\n\n    // Calculate hash\n    for (let i = 0; i < this.options.rounds; i += 2) {\n      if (i < 32) {\n        this.W[i] = block[i];\n        this.W[i + 1] = block[i + 1];\n      } else {\n        s0h = rotateRight64hi(this.W[i - 30], this.W[i - 29], 1) ^\n          rotateRight64hi(this.W[i - 30], this.W[i - 29], 8) ^\n          (this.W[i - 30] >>> 7);\n        s0l = rotateRight64lo(this.W[i - 30], this.W[i - 29], 1) ^\n          rotateRight64lo(this.W[i - 30], this.W[i - 29], 8) ^\n          ((this.W[i - 29] >>> 7) | (this.W[i - 30] << 25));\n        s1h = rotateRight64hi(this.W[i - 4], this.W[i - 3], 19) ^\n          rotateRight64hi(this.W[i - 4], this.W[i - 3], 61) ^\n          (this.W[i - 4] >>> 6);\n        s1l = rotateRight64lo(this.W[i - 4], this.W[i - 3], 19) ^\n          rotateRight64lo(this.W[i - 4], this.W[i - 3], 61) ^\n          ((this.W[i - 3] >>> 6) | (this.W[i - 4] << 26));\n\n        let c1 = ((this.W[i - 13] & 0xFFFF) + (this.W[i - 31] & 0xFFFF) + (s0l & 0xFFFF) + (s1l & 0xFFFF)) | 0;\n        let c2 = ((this.W[i - 13] >>> 16) + (this.W[i - 31] >>> 16) + (s0l >>> 16) + (s1l >>> 16) + (c1 >>> 16)) | 0;\n        let c3 = ((this.W[i - 14] & 0xFFFF) + (this.W[i - 32] & 0xFFFF) + (s0h & 0xFFFF) + (s1h & 0xFFFF) + (c2 >>> 16)) | 0;\n        let c4 = ((this.W[i - 14] >>> 16) + (this.W[i - 32] >>> 16) + (s0h >>> 16) + (s1h >>> 16) + (c3 >>> 16)) | 0;\n\n        this.W[i] = ((c4 << 16) | (c3 & 0xFFFF)) & 0xFFFFFFFF;\n        this.W[i + 1] = ((c2 << 16) | (c1 & 0xFFFF)) & 0xFFFFFFFF;\n      }\n\n      s0h = rotateRight64hi(ah, al, 28) ^ rotateRight64hi(ah, al, 34) ^ rotateRight64hi(ah, al, 39);\n      s0l = rotateRight64lo(ah, al, 28) ^ rotateRight64lo(ah, al, 34) ^ rotateRight64lo(ah, al, 39);\n      s1h = rotateRight64hi(eh, el, 14) ^ rotateRight64hi(eh, el, 18) ^ rotateRight64hi(eh, el, 41);\n      s1l = rotateRight64lo(eh, el, 14) ^ rotateRight64lo(eh, el, 18) ^ rotateRight64lo(eh, el, 41);\n\n      let chh = (eh & fh) ^ (~eh & gh);\n      let chl = (el & fl) ^ (~el & gl);\n      let majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n      let majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n      let t1l = (hl + s1l) | 0;\n      let t1h = (hh + s1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0)) | 0;\n      t1l = (t1l + chl) | 0;\n      t1h = (t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0)) | 0;\n      t1l = (t1l + K[i + 1]) | 0;\n      t1h = (t1h + K[i] + ((t1l >>> 0) < (K[i + 1] >>> 0) ? 1 : 0)) | 0;\n      t1l = (t1l + this.W[i + 1]) | 0;\n      t1h = (t1h + this.W[i] + ((t1l >>> 0) < (this.W[i + 1] >>> 0) ? 1 : 0)) | 0;\n\n      let t2l = (s0l + majl) | 0;\n      let t2h = (s0h + majh + ((t2l >>> 0) < (s0l >>> 0) ? 1 : 0)) | 0;\n\n      hh = gh;\n      hl = gl;\n      gh = fh;\n      gl = fl;\n      fh = eh;\n      fl = el;\n      el = (dl + t1l) | 0;\n      eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n      dh = ch;\n      dl = cl;\n      ch = bh;\n      cl = bl;\n      bh = ah;\n      bl = al;\n      al = (t1l + t2l) | 0;\n      ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n    }\n\n    this.state.hash[1] = (this.state.hash[1] + al) | 0;\n    this.state.hash[0] = (this.state.hash[0] + ah + ((this.state.hash[1] >>> 0) < (al >>> 0) ? 1 : 0)) | 0;\n    this.state.hash[3] = (this.state.hash[3] + bl) | 0;\n    this.state.hash[2] = (this.state.hash[2] + bh + ((this.state.hash[3] >>> 0) < (bl >>> 0) ? 1 : 0)) | 0;\n    this.state.hash[5] = (this.state.hash[5] + cl) | 0;\n    this.state.hash[4] = (this.state.hash[4] + ch + ((this.state.hash[5] >>> 0) < (cl >>> 0) ? 1 : 0)) | 0;\n    this.state.hash[7] = (this.state.hash[7] + dl) | 0;\n    this.state.hash[6] = (this.state.hash[6] + dh + ((this.state.hash[7] >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n    this.state.hash[9] = (this.state.hash[9] + el) | 0;\n    this.state.hash[8] = (this.state.hash[8] + eh + ((this.state.hash[9] >>> 0) < (el >>> 0) ? 1 : 0)) | 0;\n    this.state.hash[11] = (this.state.hash[11] + fl) | 0;\n    this.state.hash[10] = (this.state.hash[10] + fh + ((this.state.hash[11] >>> 0) < (fl >>> 0) ? 1 : 0)) | 0;\n    this.state.hash[13] = (this.state.hash[13] + gl) | 0;\n    this.state.hash[12] = (this.state.hash[12] + gh + ((this.state.hash[13] >>> 0) < (gl >>> 0) ? 1 : 0)) | 0;\n    this.state.hash[15] = (this.state.hash[15] + hl) | 0;\n    this.state.hash[14] = (this.state.hash[14] + hh + ((this.state.hash[15] >>> 0) < (hl >>> 0) ? 1 : 0)) | 0;\n  }\n\n  /**\n   * Finalize hash and return result\n   *\n   * @returns {string}\n   */\n  finalize() {\n    this.addPaddingISO7816(\n      this.state.message.length < 112 ?\n        112 - this.state.message.length | 0 :\n        240 - this.state.message.length | 0);\n    // Real length for SHA512 is 128 bit instead of 64 bit\n    this.state.message += \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n    this.addLengthBits();\n    this.process();\n    return this.getStateHash((this.options.length / 32) | 0);\n  }\n}\n\nexport default Sha512;","'use strict';\n\nimport Hasher32be from \"./hasher32be\";\nimport {rotateRight} from \"../tools/tools\";\n\n// Transform constants\n/** @type {number[]} */\nconst K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n  0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n  0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n  0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\n/**\n * Calculates [SHA256 (SHA224)](https://tools.ietf.org/html/rfc4634) hash\n *\n * @example <caption>Calculates SHA256 hash from string \"message\" - ES6 style</caption>\n * import Sha256 from \"crypto-api/src/hasher/sha256\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n *\n * let hasher = new Sha256();\n * hasher.update('message');\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates SHA256 hash from UTF string \"message\" - ES6 style</caption>\n * import Sha256 from \"crypto-api/src/hasher/sha256\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n * import {fromUtf} from \"crypto-api/src/encoder/utf\";\n *\n * let hasher = new Sha256();\n * hasher.update(fromUtf('message'));\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates SHA256 hash from string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   var hasher = CryptoApi.getHasher('sha256');\n *   hasher.update('message');\n *   console.log(CryptoApi.encoder.toHex(hasher.finalize()));\n * </script>\n *\n * @example <caption>Calculates SHA256 hash from UTF string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   console.log(CryptoApi.hash('sha256', 'message'));\n * </script>\n */\nclass Sha256 extends Hasher32be {\n  /**\n   * @param {Object} [options]\n   * @param {number} [options.rounds=64] - Number of rounds (Must be greater than 16)\n   * @param {number} [options.length=256] - Length of hash result\n   *\n   * | Hash type | Length |\n   * |-----------|--------|\n   * | sha224    | 224    |\n   * | sha256    | 256    |\n   */\n  constructor(options) {\n    options = options || {};\n    options.length = options.length || 256;\n    options.rounds = options.rounds || 64;\n    super(options);\n\n    /**\n     * Working variable (only for speed optimization)\n     * @private\n     * @ignore\n     * @type {number[]}\n     */\n    this.W = new Array(64);\n  }\n\n  /**\n   * Reset hasher to initial state\n   */\n  reset() {\n    super.reset();\n    switch (this.options.length) {\n    case 224:\n      this.state.hash = [\n        0xc1059ed8 | 0, 0x367cd507 | 0, 0x3070dd17 | 0, 0xf70e5939 | 0,\n        0xffc00b31 | 0, 0x68581511 | 0, 0x64f98fa7 | 0, 0xbefa4fa4 | 0\n      ];\n      break;\n    default:\n      this.state.hash = [\n        0x6a09e667 | 0, 0xbb67ae85 | 0, 0x3c6ef372 | 0, 0xa54ff53a | 0,\n        0x510e527f | 0, 0x9b05688c | 0, 0x1f83d9ab | 0, 0x5be0cd19 | 0\n      ];\n    }\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   * @ignore\n   * @param {number[]} block - Block\n   */\n  processBlock(block) {\n    // Working variables\n    let a = this.state.hash[0] | 0;\n    let b = this.state.hash[1] | 0;\n    let c = this.state.hash[2] | 0;\n    let d = this.state.hash[3] | 0;\n    let e = this.state.hash[4] | 0;\n    let f = this.state.hash[5] | 0;\n    let g = this.state.hash[6] | 0;\n    let h = this.state.hash[7] | 0;\n\n    // Calculate hash\n    for (let i = 0; i < this.options.rounds; i++) {\n      if (i < 16) {\n        this.W[i] = block[i] | 0;\n      } else {\n        this.W[i] = (this.W[i - 16] + (\n            rotateRight(this.W[i - 15], 7) ^\n            rotateRight(this.W[i - 15], 18) ^\n            (this.W[i - 15] >>> 3)\n          ) +\n          this.W[i - 7] + (\n            rotateRight(this.W[i - 2], 17) ^\n            rotateRight(this.W[i - 2], 19) ^\n            (this.W[i - 2] >>> 10)\n          )) | 0;\n      }\n\n      let t1 = (h + (rotateRight(e, 6) ^ rotateRight(e, 11) ^\n        rotateRight(e, 25)) + ((e & f) ^ (~e & g)) + K[i] + this.W[i]) | 0;\n      let t2 = ((rotateRight(a, 2) ^ rotateRight(a, 13) ^\n        rotateRight(a, 22)) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n      h = g;\n      g = f;\n      f = e;\n      e = (d + t1) | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = (t1 + t2) | 0;\n    }\n\n    this.state.hash[0] = (this.state.hash[0] + a) | 0;\n    this.state.hash[1] = (this.state.hash[1] + b) | 0;\n    this.state.hash[2] = (this.state.hash[2] + c) | 0;\n    this.state.hash[3] = (this.state.hash[3] + d) | 0;\n    this.state.hash[4] = (this.state.hash[4] + e) | 0;\n    this.state.hash[5] = (this.state.hash[5] + f) | 0;\n    this.state.hash[6] = (this.state.hash[6] + g) | 0;\n    this.state.hash[7] = (this.state.hash[7] + h) | 0;\n  }\n\n  /**\n   * Finalize hash and return result\n   *\n   * @returns {string}\n   */\n  finalize() {\n    this.addPaddingISO7816(\n      this.state.message.length < 56 ?\n        56 - this.state.message.length | 0 :\n        120 - this.state.message.length | 0);\n    this.addLengthBits();\n    this.process();\n    return this.getStateHash((this.options.length / 32) | 0);\n  }\n}\n\nexport default Sha256;"],"sourceRoot":""}