{"version":3,"sources":["webpack://CryptoApi/webpack/bootstrap","webpack://CryptoApi/./src/tools/tools.mjs","webpack://CryptoApi/./src/encoder/hex.mjs","webpack://CryptoApi/./src/hasher/hasher32be.mjs","webpack://CryptoApi/./src/hasher/hasher.mjs","webpack://CryptoApi/./example/hasher-file.mjs","webpack://CryptoApi/./src/hasher/sha256.mjs"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","0","e","rotateLeft","x","rotateRight","rotateRight64hi","hi","lo","rotateRight64lo","__webpack_exports__","toHex","raw","str","length","charCodeAt","toString","_hasher__WEBPACK_IMPORTED_MODULE_0__","iterator","constructor","configurable","writable","a","setPrototypeOf","getPrototypeOf","__proto__","u","Hasher32be","options","_this","TypeError","this","ReferenceError","_possibleConstructorReturn","_getPrototypeOf","unitOrder","blockUnits","Hasher","state","message","blockSizeInBytes","b","push","substr","processBlock","M","size","hash","String","fromCharCode","unitSize","blockSize","reset","JSON","parse","stringify","process","Array","join","_src_hasher_sha256__WEBPACK_IMPORTED_MODULE_0__","_src_encoder_hex__WEBPACK_IMPORTED_MODULE_1__","sliceSize","document","getElementById","addEventListener","file","target","files","hasher","Sha256","fReader","FileReader","progress","onloadend","evt","readyState","DONE","update","result","getState","innerHTML","finalize","setAttribute","Math","round","min","style","width","setState","blob","slice","readAsBinaryString","getAttribute","replace","_hasher32be__WEBPACK_IMPORTED_MODULE_0__","_tools_tools__WEBPACK_IMPORTED_MODULE_1__","Reflect","getOwnPropertyDescriptor","h","K","rounds","W","_get","block","f","g","t1","t2","addPaddingISO7816","addLengthBits","getStateHash"],"mappings":"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","file":"example/hasher-file.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","'use strict';\n\n/**\n * Rotate x to n bits left\n *\n * @param {number} x\n * @param {number} n\n * @returns {number}\n */\nfunction rotateLeft(x, n) {\n  return ((x << n) | (x >>> (32 - n))) | 0;\n}\n\n/**\n * Rotate x to n bits right\n * @param {number} x\n * @param {number} n\n * @returns {number}\n */\nfunction rotateRight(x, n) {\n  return ((x >>> n) | (x << (32 - n))) | 0;\n}\n\n/**\n * Rotate 64bit to n bits right and return hi\n *\n * @param {number} hi\n * @param {number} lo\n * @param {number} n\n * @returns {number}\n */\nfunction rotateRight64hi(hi, lo, n) {\n  if (n === 32) {\n    return lo;\n  }\n  if (n > 32) {\n    return rotateRight64hi(lo, hi, n - 32);\n  }\n  return ((hi >>> n) | (lo << (32 - n))) & (0xFFFFFFFF);\n}\n\n/**\n * Rotate 64bit to n bits right and return lo\n *\n * @param {number} hi\n * @param {number} lo\n * @param {number} n\n * @returns {number}\n */\nfunction rotateRight64lo(hi, lo, n) {\n  if (n === 32) {\n    return hi;\n  }\n  if (n > 32) {\n    return rotateRight64lo(lo, hi, n - 32);\n  }\n  return ((lo >>> n) | (hi << (32 - n))) & (0xFFFFFFFF);\n}\n\nexport {rotateLeft, rotateRight, rotateRight64lo, rotateRight64hi};","'use strict';\n\n/**\n * Convert binary result of hash to hex\n *\n * @param {string} raw\n * @returns {string}\n */\nexport function toHex(raw) {\n  let str = '';\n  for (let i = 0, l = raw.length; i < l; i++) {\n    str += (raw.charCodeAt(i) < 16 ? '0' : '') + raw.charCodeAt(i).toString(16);\n  }\n  return str;\n}","'use strict';\n\nimport Hasher from \"./hasher\";\n\n/**\n * Hasher for 32 bit big endian blocks\n * @interface\n */\nclass Hasher32be extends Hasher {\n  /**\n   * @param {Object} [options]\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * Reverse order of bytes\n     * @type {number}\n     */\n    this.unitOrder = 1;\n    /**\n     * Current block (only for speed optimization)\n     * @private\n     * @type {number[]}\n     */\n    this.blockUnits = [];\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   */\n  process() {\n    while (this.state.message.length >= this.blockSizeInBytes) {\n      this.blockUnits = [];\n      for (let b = 0; b < this.blockSizeInBytes; b += 4) {\n        this.blockUnits.push(\n          this.state.message.charCodeAt(b) << 24 |\n          this.state.message.charCodeAt(b + 1) << 16 |\n          this.state.message.charCodeAt(b + 2) << 8 |\n          this.state.message.charCodeAt(b + 3));\n      }\n      this.state.message = this.state.message.substr(this.blockSizeInBytes);\n      this.processBlock(this.blockUnits);\n    }\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   * @param {number[]} M\n   */\n  processBlock(M) {\n  }\n\n  /**\n   * Get hash from state\n   *\n   * @protected\n   * @param {number} [size=this.state.hash.length] - Limit hash size (in chunks)\n   * @returns {string}\n   */\n  getStateHash(size) {\n    size = size || this.state.hash.length;\n    let hash = '';\n    for (let i = 0; i < size; i++) {\n      hash += String.fromCharCode(this.state.hash[i] >> 24 & 0xff) +\n        String.fromCharCode(this.state.hash[i] >> 16 & 0xff) +\n        String.fromCharCode(this.state.hash[i] >> 8 & 0xff) +\n        String.fromCharCode(this.state.hash[i] & 0xff);\n    }\n    return hash;\n  }\n\n  /**\n   * Add to message cumulative size of message in bits\n   *\n   * @protected\n   */\n  addLengthBits() {\n    // @todo fix length to 64 bit\n    this.state.message += \"\\x00\\x00\\x00\" +\n      String.fromCharCode(this.state.length >> 29 & 0xff) +\n      String.fromCharCode(this.state.length >> 21 & 0xff) +\n      String.fromCharCode(this.state.length >> 13 & 0xff) +\n      String.fromCharCode(this.state.length >> 5 & 0xff) +\n      String.fromCharCode(this.state.length << 3 & 0xff);\n  }\n}\n\nexport default Hasher32be;","'use strict';\n\n/**\n * Base hasher class\n * @interface\n */\nclass Hasher {\n  /**\n   * @param {Object} options\n   * @constructor\n   */\n  constructor(options) {\n    /**\n     * Size of unit in bytes (4 = 32 bits)\n     * @type {number}\n     */\n    this.unitSize = 4;\n    /**\n     * Bytes order in unit\n     *   0 - normal\n     *   1 - reverse\n     * @type {number}\n     */\n    this.unitOrder = 0;\n    /**\n     * Size of block in units\n     * @type {number}\n     */\n    this.blockSize = 16;\n    /**\n     * Size of block in bytes\n     * @type {number}\n     */\n    this.blockSizeInBytes = this.blockSize * this.unitSize;\n\n    this.options = options || {};\n\n    this.reset();\n  }\n\n  /**\n   * Reset hasher to initial state\n   */\n  reset() {\n    /**\n     * All algorithm variables that changed during process\n     * @protected\n     * @type {Object}\n     * @property {string} state.message - Unprocessed Message\n     * @property {number} state.length - Length of message\n     */\n    this.state = {};\n    this.state.message = '';\n    this.state.length = 0;\n    /**\n     * Options from initialization\n     * @protected\n     * @type {Object}\n     */\n  }\n\n  /**\n   * Return current state\n   *\n   * @returns {Object}\n   */\n  getState() {\n    return JSON.parse(JSON.stringify(this.state));\n  }\n\n  /**\n   * Set current state\n   *\n   * @param {Object} state\n   */\n  setState(state) {\n    this.state = state;\n  }\n\n  /**\n   * Update message from binary string\n   *\n   * @param {string} message\n   */\n  update(message) {\n    this.state.message += message;\n    this.state.length += message.length;\n    this.process();\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   */\n  process() {\n  }\n\n  /**\n   * Finalize hash and return result\n   *\n   * @returns {string}\n   */\n  finalize() {\n    return '';\n  }\n\n  /**\n   * Get hash from state\n   *\n   * @protected\n   * @param {number} [size=this.state.hash.length] - Limit hash size (in chunks)\n   * @returns {string}\n   */\n  getStateHash(size) {\n    return '';\n  }\n\n  /**\n   * Add PKCS7 padding to message\n   * Pad with bytes all of the same value as the number of padding bytes\n   *\n   * @protected\n   * @param {number} length\n   */\n  addPaddingPKCS7(length) {\n    this.state.message += new Array(length + 1).join(String.fromCharCode(length));\n  }\n\n  /**\n   * Add ISO7816-4 padding to message\n   * Pad with 0x80 followed by zero bytes\n   *\n   * @protected\n   * @param {number} length\n   */\n  addPaddingISO7816(length) {\n    this.state.message += \"\\x80\" + new Array(length).join(\"\\x00\");\n  }\n\n  /**\n   * Add zero padding to message\n   * Pad with 0x00 characters\n   *\n   * @protected\n   * @param {number} length\n   */\n  addPaddingZero(length) {\n    this.state.message += new Array(length + 1).join(\"\\x00\");\n  }\n}\n\nexport default Hasher;","'use strict';\n\nimport Sha256 from \"../src/hasher/sha256\";\nimport {toHex} from \"../src/encoder/hex\";\n\nconst sliceSize = 4096;\n\nlet fileElement = document.getElementById('file');\nfileElement.addEventListener(\"change\", function (e) {\n  let file = e.target.files[0];\n  let hasher = new Sha256();\n  let fReader = new FileReader();\n  let i = 0;\n  let progress = document.getElementById('hash-progress');\n  /**\n   * @param {ProgressEvent|Event} evt\n   */\n  fReader.onloadend = function (evt) {\n    if (evt.target.readyState === FileReader.DONE) {\n      hasher.update(evt.target.result);\n      let state = hasher.getState();\n      document.getElementById('hash').innerHTML = toHex(hasher.finalize());\n\n      progress.setAttribute('aria-valuenow', (Math.round(1000 * Math.min(i + sliceSize, file.size) / file.size) / 10).toString());\n      progress.style.width = (Math.round(1000 * Math.min(i + sliceSize, file.size) / file.size) / 10).toString() + '%';\n      progress.innerHTML = (Math.round(1000 * Math.min(i + sliceSize, file.size) / file.size) / 10).toString() + '%';\n      hasher.setState(state);\n      if (i < file.size) {\n        i += sliceSize;\n        let blob = file.slice(i, Math.min(i + sliceSize, file.size));\n        fReader.readAsBinaryString(blob);\n      } else {\n        progress.setAttribute('class', progress.getAttribute('class')\n          .replace(/ active/, ''));\n      }\n    }\n  };\n  progress.setAttribute('class', progress.getAttribute('class') + ' active');\n  let blob = file.slice(i, Math.min(i + sliceSize, file.size));\n  fReader.readAsBinaryString(blob);\n});","'use strict';\n\nimport Hasher32be from \"./hasher32be\";\nimport {rotateRight} from \"../tools/tools\";\n\n// Transform constants\n/** @type {number[]} */\nconst K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n  0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n  0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n  0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\n/**\n * Calculates [SHA256 (SHA224)](https://tools.ietf.org/html/rfc4634) hash\n *\n * @example <caption>Calculates SHA256 hash from string \"message\" - ES6 style</caption>\n * import Sha256 from \"crypto-api/src/hasher/sha256\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n *\n * let hasher = new Sha256();\n * hasher.update('message');\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates SHA256 hash from UTF string \"message\" - ES6 style</caption>\n * import Sha256 from \"crypto-api/src/hasher/sha256\";\n * import {toHex} from \"crypto-api/src/encoder/hex\";\n * import {fromUtf} from \"crypto-api/src/encoder/utf\";\n *\n * let hasher = new Sha256();\n * hasher.update(fromUtf('message'));\n * console.log(toHex(hasher.finalize()));\n *\n * @example <caption>Calculates SHA256 hash from string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   var hasher = CryptoApi.getHasher('sha256');\n *   hasher.update('message');\n *   console.log(CryptoApi.encoder.toHex(hasher.finalize()));\n * </script>\n *\n * @example <caption>Calculates SHA256 hash from UTF string \"message\" - ES5 style</caption>\n * <script src=\"https://nf404.github.io/crypto-api/crypto-api.min.js\"></script>\n * <script>\n *   console.log(CryptoApi.hash('sha256', 'message'));\n * </script>\n */\nclass Sha256 extends Hasher32be {\n  /**\n   * @param {Object} [options]\n   * @param {number} [options.rounds=64] - Number of rounds (Must be greater than 16)\n   * @param {number} [options.length=256] - Length of hash result\n   *\n   * | Hash type | Length |\n   * |-----------|--------|\n   * | sha224    | 224    |\n   * | sha256    | 256    |\n   */\n  constructor(options) {\n    options = options || {};\n    options.length = options.length || 256;\n    options.rounds = options.rounds || 64;\n    super(options);\n\n    /**\n     * Working variable (only for speed optimization)\n     * @private\n     * @ignore\n     * @type {number[]}\n     */\n    this.W = new Array(64);\n  }\n\n  /**\n   * Reset hasher to initial state\n   */\n  reset() {\n    super.reset();\n    switch (this.options.length) {\n    case 224:\n      this.state.hash = [\n        0xc1059ed8 | 0, 0x367cd507 | 0, 0x3070dd17 | 0, 0xf70e5939 | 0,\n        0xffc00b31 | 0, 0x68581511 | 0, 0x64f98fa7 | 0, 0xbefa4fa4 | 0\n      ];\n      break;\n    default:\n      this.state.hash = [\n        0x6a09e667 | 0, 0xbb67ae85 | 0, 0x3c6ef372 | 0, 0xa54ff53a | 0,\n        0x510e527f | 0, 0x9b05688c | 0, 0x1f83d9ab | 0, 0x5be0cd19 | 0\n      ];\n    }\n  }\n\n  /**\n   * Process ready blocks\n   *\n   * @protected\n   * @ignore\n   * @param {number[]} block - Block\n   */\n  processBlock(block) {\n    // Working variables\n    let a = this.state.hash[0] | 0;\n    let b = this.state.hash[1] | 0;\n    let c = this.state.hash[2] | 0;\n    let d = this.state.hash[3] | 0;\n    let e = this.state.hash[4] | 0;\n    let f = this.state.hash[5] | 0;\n    let g = this.state.hash[6] | 0;\n    let h = this.state.hash[7] | 0;\n\n    // Calculate hash\n    for (let i = 0; i < this.options.rounds; i++) {\n      if (i < 16) {\n        this.W[i] = block[i] | 0;\n      } else {\n        this.W[i] = (this.W[i - 16] + (\n            rotateRight(this.W[i - 15], 7) ^\n            rotateRight(this.W[i - 15], 18) ^\n            (this.W[i - 15] >>> 3)\n          ) +\n          this.W[i - 7] + (\n            rotateRight(this.W[i - 2], 17) ^\n            rotateRight(this.W[i - 2], 19) ^\n            (this.W[i - 2] >>> 10)\n          )) | 0;\n      }\n\n      let t1 = (h + (rotateRight(e, 6) ^ rotateRight(e, 11) ^\n        rotateRight(e, 25)) + ((e & f) ^ (~e & g)) + K[i] + this.W[i]) | 0;\n      let t2 = ((rotateRight(a, 2) ^ rotateRight(a, 13) ^\n        rotateRight(a, 22)) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n      h = g;\n      g = f;\n      f = e;\n      e = (d + t1) | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = (t1 + t2) | 0;\n    }\n\n    this.state.hash[0] = (this.state.hash[0] + a) | 0;\n    this.state.hash[1] = (this.state.hash[1] + b) | 0;\n    this.state.hash[2] = (this.state.hash[2] + c) | 0;\n    this.state.hash[3] = (this.state.hash[3] + d) | 0;\n    this.state.hash[4] = (this.state.hash[4] + e) | 0;\n    this.state.hash[5] = (this.state.hash[5] + f) | 0;\n    this.state.hash[6] = (this.state.hash[6] + g) | 0;\n    this.state.hash[7] = (this.state.hash[7] + h) | 0;\n  }\n\n  /**\n   * Finalize hash and return result\n   *\n   * @returns {string}\n   */\n  finalize() {\n    this.addPaddingISO7816(\n      this.state.message.length < 56 ?\n        56 - this.state.message.length | 0 :\n        120 - this.state.message.length | 0);\n    this.addLengthBits();\n    this.process();\n    return this.getStateHash((this.options.length / 32) | 0);\n  }\n}\n\nexport default Sha256;"],"sourceRoot":""}